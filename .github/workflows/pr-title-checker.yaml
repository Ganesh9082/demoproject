name: "PR Title Checker"
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited
      - closed

permissions:
  contents: write
  pull-requests: write

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run PR Title Checker
        id: title-check
        uses: thehanimo/pr-title-checker@v1.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pass_on_octokit_error: false
          configuration_path: .github/pr-title-checker-config.json

      - name: Read messages from JSON
        id: read_messages
        run: |
          success_message=$(jq -r '.MESSAGES.success' .github/pr-title-checker-config.json)
          failure_message=$(jq -r '.MESSAGES.failure' .github/pr-title-checker-config.json)
          echo "SUCCESS_MESSAGE=$success_message" >> $GITHUB_ENV
          echo "FAILURE_MESSAGE=$failure_message" >> $GITHUB_ENV

      - name: Comment if title is satisfied
        if: success()
        run: |
          gh pr comment ${{ github.event.pull_request.number }} -R ${{ github.repository }} --body "$SUCCESS_MESSAGE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SUCCESS_MESSAGE: ${{ env.SUCCESS_MESSAGE }}

      - name: Close PR if title is invalid
        if: failure()
        run: |
          gh pr close ${{ github.event.pull_request.number }} -R ${{ github.repository }}
          gh issue comment ${{ github.event.pull_request.number }} -R ${{ github.repository }} --body "$FAILURE_MESSAGE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FAILURE_MESSAGE: ${{ env.FAILURE_MESSAGE }}

      - name: Reopen PR if title is corrected
        if: github.event.action == 'edited' && success()
        run: |
          if [ "${{ github.event.pull_request.state }}" == "closed" ]; then
            gh pr reopen ${{ github.event.pull_request.number }} -R ${{ github.repository }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
